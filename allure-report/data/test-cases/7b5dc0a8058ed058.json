{"uid":"7b5dc0a8058ed058","name":"get  blood groups","fullName":"SmartOffice/Phase-02/Blood Groups#get  blood groups","historyId":"db42a8e960ed6450476191b0874d2f5a:7cb731a9e5b3951171d6114d756f8e35","time":{"start":1733299435610,"stop":1733299435697,"duration":87},"status":"failed","statusMessage":"Check the status code is 200, Get the blood groups, Check the status code is OK, Check the POST method request","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Check the status code is 200, Get the blood groups, Check the status code is OK, Check the POST method request","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Check the status code is 200","time":{"start":1733299435693,"stop":1733299435693,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:40)","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":true,"attachmentsCount":0,"shouldDisplayMessage":true},{"name":"Get the blood groups","time":{"start":1733299435693,"stop":1733299435693,"duration":0},"status":"failed","statusMessage":"expected 'Unauthenticated' to deeply equal 'Success'","statusTrace":"AssertionError: expected 'Unauthenticated' to deeply equal 'Success'\n   at Object.eval sandbox-script.js:2:40)","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":true,"attachmentsCount":0,"shouldDisplayMessage":true},{"name":"Check the header","time":{"start":1733299435694,"stop":1733299435694,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Check the status code is OK","time":{"start":1733299435694,"stop":1733299435694,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'OK' but got 'Unauthorized'","statusTrace":"AssertionError: expected response to have status reason 'OK' but got 'Unauthorized'\n   at Object.eval sandbox-script.js:4:40)","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":true,"attachmentsCount":0,"shouldDisplayMessage":true},{"name":"Response time check","time":{"start":1733299435694,"stop":1733299435694,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Check the POST method request","time":{"start":1733299435695,"stop":1733299435695,"duration":0},"status":"failed","statusMessage":"expected 401 to be one of [ 200, 299 ]","statusTrace":"AssertionError: expected 401 to be one of [ 200, 299 ]\n   at Object.eval sandbox-script.js:6:40)","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":true,"attachmentsCount":0,"shouldDisplayMessage":true},{"name":"Response contains data object","time":{"start":1733299435695,"stop":1733299435695,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[{"uid":"c714c1752883bffa","name":"Request Headers","source":"c714c1752883bffa.json","type":"application/json","size":363},{"uid":"a195db8939dfedc6","name":"Response Headers","source":"a195db8939dfedc6.json","type":"application/json","size":276},{"uid":"9aeb4451e5c720df","name":"Response Body","source":"9aeb4451e5c720df.txt","type":"text/plain","size":59}],"parameters":[],"attachmentStep":false,"stepsCount":7,"hasContent":true,"attachmentsCount":3,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"AMINUR-RAHMAN-549"},{"name":"thread","value":"pid-11980-worker-main"},{"name":"parentSuite","value":"SmartOffice"},{"name":"suite","value":"Phase-02"},{"name":"subSuite","value":"Blood Groups"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://stagingapi.smartoffice.ai/api/v1/blood-groups"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"7ab9b1437bb61e9f","status":"failed","statusDetails":"Check the status code is 200, Get the blood groups, Check the status code is OK, Check the POST method request","time":{"start":1733298571419,"stop":1733298571515,"duration":96}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"7b5dc0a8058ed058.json","parameterValues":["GET - https://stagingapi.smartoffice.ai/api/v1/blood-groups","401"]}